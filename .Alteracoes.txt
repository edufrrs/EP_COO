1 - Ganhar vida ao comer fantasmas
	- Problema na classe GameController, metodo 'checkPacmanEatSomeOneAndOrTimeFruittoDesappear' 
	- possui um if que chama o metodo 'addlife'
	- resolvido removendo essa chamada.
	- Coloquei o addlife novamente e subi a pontuacão para 10.000



2 - Movimentacao (fantasma parado)
	- Blinky
	- Ele usa os metodos followPacman() e escapePacman() da classe Ghost
	- Faltava verificar em cada um desses metodos se o pacman esta parado
	- Resolvido acrescentando essa verificacao. Quando esta parado, chama o metodo moveRandom()

	
	- Pinky
	- Tambem faltava a verificacao se o Pacman esta parado
	- Essa verificacao foi acrescentada no metodo autoDraw() da propria classe.
	

3- Pontuação ao comer fantasmas
	- Na classe GameControllet, metodo "checkPacmanEatSomeOneAndOrTimeFruittoDesappear"
	- Coloquei o addlife novamente e subi a pontuacão para 10.000
	- Na classe do Pacman criei uma variável 'ghostPointMultiplier'
	  e os métodos 'getGhostPointMultiplier','incrementGhostPointMultiplier'e 'resetGhostPointMultiplier'
	- 'getGhostPointMultiplier','incrementGhostPointMultiplier'e foram instanciadas quando o Pacman come um fantasma
	- 'resetGhostPointMultiplier'foi instanciada quando o Pacman come uma PowerPallet	
Problema:
Quando o Pacman come dois ou mais fantasmas de uma vez só, contabiliza os pontos apenas do primeiro fantasma comido.


4 - Novo nivel
	- Criada nova matriz na classe Stage
	- Adicionado "Level 4" na string da classe InitialScreen
	- Pacman
		- criado metodo setNumberGhosttoEat5(). Sem ajustar esse atributo estava gerando erro na hora de criar os
		elementos
	- Gamescreen, fillInitialElemArrayFromMatrix()
		- criado um if else que verifica o valor de 'Main.level'. Quando == 4, chama setNumberGhosttoEat5() e 
		cria a tela com o quinto fantasma


5 - Salvamento do jogo
	- Implementada a interface Serializable em todas as classes do pacote 'elements'
	- Corrigido evento Ctrl+S (GameScreen > keyPressed)
	- openSavedGame() e saveElemArrayandStage()
		- Só precisou salvar em arquivo 'stage', 'pacman' e o array de elementos da classe GameScreen


6 - Menu
	- Implementada a função configureMenuBar() na 'InitialScreen()'
	- a função implementa o menu mas ainda preciso configurar pra abrir o jogo
7- Funcionalidade do Menu
	- Implementada as funçoes de abrir um novo jogo, carregar um jogo salvo e mudar o estágio
	- As funcionalidades foram implementadas no ConfigureMenuBar


8 - Reset da tela quando morre
	- GameController, if(overlapGhostPacman)
		- Chamada que resetava removida
		- Apos morrer, reposicionando pacman em (1,1)
	- GameScreen, fillInitialElemArrayFromMatrix()
		- Para facilitar na hora de testar, coloquei para iniciar com 2 vidas

9- Pacman quando passava de fase e alcançava 10.000 pontos não ganhava vida
	- No método restarGame foi incluido um parâmetro pra receber o PointsRemaining(variável que guarda 
		quantos pontos faltam para o pacman ganhar vida)
	- E no método foi incluido uma linha de comando set que inclui o pointsRemaining da fase anterior na próxima fase
	- Corrigi um problema que toda vez que passava a fase o número de vidas voltava pra 1, alterei a chamada do restartGame(1,...) pra restarGame(pacman.getLifes() 

10- Printar na tela o ponto que o fantasma deu quando ele morre
	-Foi criado uma nova classe GhostPointsImage que extende Element
	-no método que checa quando um fantasma morre, foi adicionada linhas que criam um objeto do tipo(GhostPointsImage)
		e recebe o nome da imagem(ex:200.png) e cria o desenho do ponto na tela
	-foi também adicionado um timer para eliminar a imagem depois de certo tempo
11- Adicionado no título o estágio selecionado
	- Em Initial gamescreen foi adicionado um print no título para mostrar o estágio selecionado
	- Em configureStageMenu foi adicionado uma linha para atualizar o título 

12- Pacman agora fica invencível quando perde uma vida
	- Foi criado uma função para tirar a imortalidade do pacman depois certo tempo passado (checkTimeOfInvencibility)

13 - Classe de Teste
	- Criada para GameScreen com 3 metodos 
		- Teste de criação das fases
		- Teste de load
		- Teste do metodo restart	 